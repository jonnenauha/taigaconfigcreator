; * The startup section lists all the connectors to start up in this server
; * instance. This may be only one, or it may be the entire server suite.
; * Multiple connectors should be seaprated by commas.
; *
; * These are the IN connectors the server uses, the in connectors
; * read this config file and load the needed OUT and database connectors
; *
; * Add "OpenSim.Server.Handlers.dll:AuthenticationServiceConnector" to
; * enable the experimental authentication service
; *
; 127.0.0.1

[Startup]
${multi ServiceConnectors = ModCableBeach.dll:CableBeachServerConnector,ModCableBeach.dll:AssetServerConnector,ModCableBeach.dll:InventoryServerConnector,OpenSim.Server.Handlers.dll:FreeswitchServerConnector,OpenSim.Server.Handlers.dll:GridServiceConnector,ModCableBeach.dll:WebDAVServerConnector|string}$

;,ModCableBeach.dll:WebDAVServerConnector

; * This is common for all services, it's the network setup for the entire
; * server instance
; *
[Network]
${single port = 8003|int}$

; * The following are for the remote console
; * They have no effect for the local or basic console types
; * Leave commented to diable logins to the console
;ConsoleUser = Test
;ConsolePass = secret

[CableBeachService]
${single ServiceUrl = "http://127.0.0.1:8003/"|string}$
${single OpenIDProvider = "http://127.0.0.1:8002/"|string}$
RootPageTemplateFile = "webtemplates/inventoryserver_homepage.tpl"
PermissionGrantTemplateFile = "webtemplates/inventoryserver_permissiongrant.tpl"
${single UserService = "http://127.0.0.1:8002"|string}$
TimeOut = 10000
PropertyProvider = "NHibernatePropertyStorage"
${single ConnectionString = "MySQLDialect;MySqlDataDriver;Data Source=localhost;Database=TaigaWebdav;User ID=root;Password=root"|string|"WebDAV property provider database connection string"}$

; * As an example, the below configuration precisely mimicks the legacy
; * asset server. It is read by the asset IN connector (defined above)
; * and it then loads the OUT connector (a local database module). That,
; * in turn, reads the asset loader and database connection information
; *
[AssetService]
LocalServiceModule = "OpenSim.Services.AssetService.dll:AssetService"
DefaultAssetLoader = "OpenSim.Framework.AssetLoader.Filesystem.dll"
AssetLoaderArgs = "assets/AssetSets.xml"
${choice StorageProvider = {OpenSim.Data.MySQL.dll, OpenSim.Data.SQLite.dll, OpenSim.Data.MSSQL.dll, OpenSim.Data.Null.dll}|string|"AssetService db storage provider"}$
${single ConnectionString = "Data Source=localhost;Database=grid;User ID=root;Password=root;"|string|"AssetService connection string"}$

; * This configuration loads the inventory server modules. It duplicates
; * the function of the legacy inventory server
; *
[InventoryService]
LocalServiceModule = "OpenSim.Services.InventoryService.dll:InventoryService"
${single UserServerURI = "http://127.0.0.1:8002"|string|"User server uri for inventory service"}$
SessionAuthentication = "false"
${choice StorageProvider = {OpenSim.Data.MySQL.dll, OpenSim.Data.SQLite.dll, OpenSim.Data.MSSQL.dll, OpenSim.Data.Null.dll}|string|"Storage provider for inventory service"}$
;ConnectionString = "Data Source=localhost;Database=grid;User ID=rex;Password=rex;"
${single ConnectionString = "Data Source=localhost;Database=grid;User ID=root;Password=root;"|string|"Connection string for inventory service"}$

; * This is the configuration for the freeswitch server in grid mode
[FreeswitchService]
LocalServiceModule = "OpenSim.Services.FreeswitchService.dll:FreeswitchService"

; * This is the new style authentication service. Currently, only MySQL
; * is implemented. "Realm" is the table that is used for user lookup.
; * By setting it to "users", you can use the old style users table
; * as an authentication source.
; *

; * This is the new style grid service.
; * "Realm" is the table that is used for user lookup.
; * It defaults to "regions", which uses the legacy tables
; *
[GridService]
${single LocalServiceModule = "OpenSim.Services.GridService.dll:GridService"|string}$
${single StorageProvider = "OpenSim.Data.MySQL.dll:MySqlRegionData"|string|"Db storage provider for Grid service"}$
;ConnectionString = "Data Source=localhost;Database=opensim;User ID=rex;Password=rex;"
${single ConnectionString = "Data Source=localhost;Database=opensim;User ID=root;Password=root;"|string|"Connection string for grid service"}$
Realm = "regions"
